var title = document.getElementById("fullTitle"); //the title page
 var pong = document.getElementById("Game");//the game page
 var back = document.getElementById("backButton"); //the back to menu button
 var about = document.getElementById("About"); //the about page
 var htp = document.getElementById("HowToPlay"); //the how to play page
 var htpimg = document.getElementById("htpDiagram"); //the diagram image in the how to play page
 var aboutimg = document.getElementById("ADiagram"); //the about logo image
 var ctxT = titleBack.getContext("2d"); // Get the drawing context for the canvas
 var ctxP = GameBack.getContext("2d"); // Get the drawing context for the canvas
 var ctxH = howtoplayBack.getContext("2d"); // Get the drawing context for the canvas
 var ctxA = aboutBack.getContext("2d"); // Get the drawing context for the canvas
 var FPS = 40;                        // How many frames per second
 var score = 0;                       
 var game_over = false;
 var ballHeight = 50; //50 is standard height
 var ballWidth = 50; //50 is standard width
 var ballDir = 0; //Will determine the direction of the ball after it bounces
 var paddleWidth = 65; //65 is standard width
 var paddleHeight = 225; // 225 is standard height
 var p1Score = 0; //score for the left paddle
 var p2Score = 0; //score for the right paddle
 var gameover = 0; //checks if there is a winner or not
 var GameOn = 0; //checks if the game is playing or not
 var CongratsText = "Congratulations!";
 var WinnerText = "Spoon is the winner!";

var menu = document.getElementById("Menusnd"); // snd = background music
var htps = document.getElementById("HTPsnd");
var abouts = document.getElementById("Aboutsnd");
var EasyBGM = document.getElementById("Easysnd"); //bgm for the easy game
var HardBGM = document.getElementById("Hardsnd"); //bgm for the hard game
var MenuSE = document.getElementById("MenuSE"); // SE = sound effects
var HitSE = document.getElementById("HitSE");
var VictorySE = document.getElementById("VictorySE");

titleBack.width = window.innerWidth - 20;                            // fill the entire browser width
titleBack.height = window.innerHeight - 20;                          // fill the entire browser height
GameBack.width = window.innerWidth - 20;                            // fill the entire browser width
GameBack.height = window.innerHeight - 20;                          // fill the entire browser height
howtoplayBack.width = window.innerWidth - 20;                            // fill the entire browser width
howtoplayBack.height = window.innerHeight - 20;                          // fill the entire browser height
aboutBack.width = window.innerWidth - 20;                            // fill the entire browser width
aboutBack.height = window.innerHeight - 20;                          // fill the entire browser height

document.body.onload = function () { //will run when the project loads
  pong.style.display = "none";//hides game screen
  GameOn = 0;
  back.style.display = "none";//hides additional screens
  HowToPlay.style.display = "none";
  about.style.display = "none";
  ctxT.font = "125px Brush Script MT"; //loads the title graphic on the main page
ctxT.fillText("Spoon ", 320,120);
ctxT.font = "200px Copperplate";!
ctxT.fillText("VS ",568,120);
ctxT.font = "100px Impact";
ctxT.fillText("Fork ",850, 120);
menu.play(); //plays the menu bgm
}

function selectEasy() { //runs when 'Snack' button is clicked
    menu.pause();//stops all other music
    htps.pause();
    EasyBGM.play();//play game bgm
    title.style.display = "none";//hides other screens
    HowToPlay.style.display = "none";
    pong.style.display = "block";//turns on game screen
    back.style.display = "block";
    paddleWidth = 65; //65 is standard width for both paddles
    paddleHeight = 225; // 225 is standard height for both paddles
    ballHeight = 50; //50 is standard height
    ballWidth = 50; //50 is standard width
    GameOn = 1;
    BallDirection();
    ball.velocity_x= 8;
    ball.velocity_y= 8; 
    MenuSE.cloneNode(true).play();
  }

function selectHard() {
    menu.pause();
    htps.pause();
    HardBGM.play();
    MenuSE.cloneNode(true).play();
    title.style.display = "none";
    HowToPlay.style.display = "none";
    pong.style.display = "block";
    back.style.display = "block";
    paddleWidth = 55; //65 is standard width
    paddleHeight = 205; // 225 is standard height
    ballHeight = 45; //50 is standard height
    ballWidth = 45; //50 is standard width
    GameOn = 1;
    BallDirection();
    ball.velocity_x= 12;
    ball.velocity_y= 12; 
  }

function selectHowtoplay() {
    htps.play();
    menu.pause();
    EasyBGM.pause();
    HardBGM.pause();
    MenuSE.cloneNode(true).play();
    title.style.display = "none";
    pong.style.display = "none";
    back.style.display = "block";
    HowToPlay.style.display = "block";
    ctxH.drawImage(htpimg, window.innerWidth / 4 - 10, 10, window.innerWidth -375, window.innerHeight / 1.4);
    ctxH.font = "25px Brush Script MT";
    ctxH.fillText("*Both cutlery have to bounce the pea into", 12, 28);
    ctxH.fillText("the other's side while defending their", 20, 50);
    ctxH.fillText("side.", 20, 72);
    ctxH.fillText("*At the start, the pea will go in a", 12, 94);
    ctxH.fillText("random direction.", 20, 116);
    ctxH.fillText("*The cutlery who gets the pea into the", 12, 138);
    ctxH.fillText("other's side scores 1 point. The player ", 20, 160);
    ctxH.fillText("who gets 5 points wins the game!", 20, 182);
    ctxH.fillText("*Use the W and S keys to move the", 12, 204);
    ctxH.fillText("spoon up and down, and use the Up", 20, 226);
    ctxH.fillText("and Down arrows to move the fork", 20, 248);
    ctxH.fillText("up and down!", 20, 270);
    ctxH.fillText("*The pea will bounce off both cutlery", 12, 292);
    ctxH.fillText("at a random angle, so keep your eyes", 20, 310);
    ctxH.fillText("open!", 20, 332);
    ctxH.fillText("*The pink text at the top is the", 12, 354);
    ctxH.fillText("score for each respective player.", 20, 376);
    GameOn = 0;
    BallDirection();
    ball.velocity_x= 12;
    ball.velocity_y= 12; 
  }

function selectAbout() {
    abouts.play();
    menu.pause();
    MenuSE.cloneNode(true).play();
    pong.style.display = "none";
    back.style.display = "block";
    HowToPlay.style.display = "none";
    title.style.display = "none";
    about.style.display = "block";
    ctxA.drawImage(aboutimg, window.innerWidth - 500, 10, 280, 280);
    ctxA.font = "25px Brush Script MT";
    ctxA.fillText("*this is my logo :3", window.innerWidth - 500, 307);
    ctxA.fillText("I made this for a Coding and Robotics assignment for school and I quite enjoyed making it! This is the second", 10, 28);
    ctxA.fillText("game I've made in Javascript and I definitely had a harder time making this one due to having to manage ball", 10, 50);
    ctxA.fillText("physics and all that which can get super annoying, but it's all worth it at the end. Making the sprites on the", 10, 72);
    ctxA.fillText("other hand was pretty easy, as I decided to use simple shapes to represent the fork and spoon instead of using", 10, 94);
    ctxA.fillText("transparent images. The pea and background was also fairly easy as I used templates provided by my teacher so", 10, 116);
    ctxA.fillText("huge thank you to them. Also huge thank you to W3Schools for provididng helpful guides for some of the stuff", 10, 138);
    ctxA.fillText("I had trouble with while making this. That's basically my experience while making this. Bye!", 10, 160);
    ctxA.fillText("I have a youtube channel: https://www.youtube.com/channel/UCZq2oxygzw-McYG0OYWqAcA", 10, 200);
    ctxA.fillText("Music used:", 10, 240);
    ctxA.fillText("Monkeys Spinning Monkeys - Kevin Macleod - Title", 10, 262);
    ctxA.fillText("Jaracanda - Imovie - How To Play", 10, 284);
    ctxA.fillText("Le Grand Chase - Kevin Macleod - Snack Game", 10, 306);
    ctxA.fillText("Blown Away - Kevin Macleod - 3-Course Game", 10, 328);
    ctxA.fillText("Fairytale Waltz - Kevin Macleod - About the chef...", 10, 350);
    ctxA.fillText("Monkeys Spinning Monkeys Kevin MacLeod (incompetech.com)", 10, 400);
    ctxA.fillText("Licensed under Creative Commons: By Attribution 3.0", 10, 422);
    ctxA.fillText("http://creativecommons.org/licenses/by/3.0/", 10, 444);
    ctxA.fillText("Le Grand Chase Kevin MacLeod (incompetech.com)", 10, 466);
    ctxA.fillText("Licensed under Creative Commons: By Attribution 3.0", 10, 488);
    ctxA.fillText("http://creativecommons.org/licenses/by/3.0/", 10, 510);
    ctxA.fillText("Blown Away Kevin MacLeod (incompetech.com)", 10, 532);
    ctxA.fillText("Licensed under Creative Commons: By Attribution 3.0", 10, 554);
    ctxA.fillText("http://creativecommons.org/licenses/by/3.0/", 10, 576);
    ctxA.fillText("Fairytale Waltz Kevin MacLeod (incompetech.com)", 10, 598);
    ctxA.fillText("Licensed under Creative Commons: By Attribution 3.0", 10, 620);
    ctxA.fillText("http://creativecommons.org/licenses/by/3.0/", 10, 642);
    GameOn = 0;
    BallDirection();
    ball.velocity_x= 12;
    ball.velocity_y= 12; 
  }

function selectBack() {
    menu.play();
    htps.pause();
    abouts.pause();
    EasyBGM.pause();
    HardBGM.pause();
    MenuSE.cloneNode(true).play();
    pong.style.display = "none";
    back.style.display = "none";
    about.style.display = "none";
    HowToPlay.style.display = "none";
    title.style.display = "block";
    GameOn = 0;
    setTimeout(() => {
    BallDirection();
      }, 10);
    GameOver();
  }

 function LSprite (img_url) {
        this.x = 100;
        this.y = 150; 
        this.width = paddleWidth;
        this.height = paddleHeight;
        this.visible= true;
        this.velocity_y = 0;
        this.MyImg = new Image();
        this.MyImg.src = img_url ;
        }

function RSprite (img_url) {
        this.x = 1250;
        this.y = 150; 
        this.width = paddleWidth;
        this.height = paddleHeight;
        this.visible= true;
        this.velocity_y = 0;
        this.MyImg = new Image();
        this.MyImg.src = img_url ;
        }

function Ball (img_url) {
        this.x = 675;
        this.y = window.innerHeight / 2; 
        this.visible= true;
        this.width = ballWidth;
        this.height = ballHeight;
        this.velocity_x = 0;
        this.velocity_y = 0;
        this.MyImg = new Image();
        this.MyImg.src = img_url;
        }

function BallDirection() {// this determines what direction the ball will go in when the game begins
  setTimeout(() => {
  var startDir = Math.ceil(Math.random() * 2);//sets a random value; it will go in either right or left
  if (startDir == 2) {
    console.log("BBBBBBB");//console log to ensure
    ball.velocity_x = -ball.velocity_x;
    startDir = 3;
    }
  if (startDir == 1) {
    console.log("AAAAAAA");//console log to ensure
    ball.velocity_x = ball.velocity_x;
    startDir = 3;
    }
  Ball.x = 675;//position ball in the centre of the screen
  Ball.y = window.innerHeight / 2; 
    }, 1000);
}

    LSprite.prototype.Do_Frame_Things = function() {
        if (this.visible) ctxP.drawImage(this.MyImg, this.x, this.y, paddleWidth, paddleHeight);  // draw the thing
        // if the y-velocity is upward, only apply the velocity if the sprite is not off-screen at the top
        if ((this.velocity_y < 0) && (this.y > 20))  this.y = this.y + this.velocity_y;

        // if the y-velocity is downward, only apply the velocity if the sprite is not off-screen at the bottom
        if ((this.velocity_y > 0) && (this.y + this.MyImg.height< GameBack.height)) this.y = this.y + this.velocity_y;
        }

    RSprite.prototype.Do_Frame_Things = function() {
        if (this.visible) ctxP.drawImage(this.MyImg, this.x, this.y, paddleWidth, paddleHeight);  // draw the thing
        // if the y-velocity is upward, only apply the velocity if the sprite is not off-screen at the top
        if ((this.velocity_y < 0) && (this.y > 20))  this.y = this.y + this.velocity_y;

        // if the y-velocity is downward, only apply the velocity if the sprite is not off-screen at the bottom
        if ((this.velocity_y > 0) && (this.y + this.MyImg.height< GameBack.height)) this.y = this.y + this.velocity_y;
        }

    Ball.prototype.Do_Frame_Things = function() {
        if (p1Score == 5 || p1Score >= 5) {
          CongratsText = "Congratulations!";
          p1Score = 5;
          ctxP.fillStyle= "HotPink";
          ctxP.font = "180px Brush Script MT";
          ctxP.fillText("" + CongratsText, window.innerWidth / 7.5, window.innerHeight / 2);
          ctxP.font = "60px Brush Script MT";
          WinnerText = "Spoon is the winnner! Press P to restart!";
          ctxP.fillText("" + WinnerText, window.innerWidth / 5, window.innerHeight / 2 + 90);
          VictorySE.play();
          gameover = 1;
          return;
        }
        if (p2Score == 5 || p2Score >= 5) {
          CongratsText = "Congratulations!";
          p2Score = 5;
          ctxP.fillStyle= "HotPink";
          ctxP.font = "180px Brush Script MT";
          ctxP.fillText("" + CongratsText, window.innerWidth / 7.5, window.innerHeight / 2);
          ctxP.font = "60px Brush Script MT";
          WinnerText = "Fork is the winnner! Press P to restart!";
          ctxP.fillText("" + WinnerText, window.innerWidth / 5, window.innerHeight / 2 + 90);
          VictorySE.play();
          gameover = 1;
          return;
        }
        if (GameOn == 1) {
        if (this.visible) ctxP.drawImage(this.MyImg, this.x, this.y, ballWidth, ballHeight);  // draw the thing
        setTimeout(() => {
        this.x = this.x + this.velocity_x;
        this.y = this.y + this.velocity_y;                            // move the thing 
        if (this.x + ballWidth < 0) {
          p2Score = p2Score + 1;
          this.x = 675;
          this.y = window.innerHeight / 2; 
          MenuSE.cloneNode(true).play();
          return;
        }
        if (this.x + ballWidth > GameBack.width) {
          p1Score = p1Score + 1;
          this.x = 675;
          this.y = window.innerHeight / 2; 
          MenuSE.cloneNode(true).play();
          return;}
        if (this.y < 0) {this.velocity_y= -this.velocity_y};
        if (this.y + ballHeight > GameBack.height) {this.velocity_y= -this.velocity_y}; 
        }, 1000);
        } else {
          this.x = 675;
          this.y = window.innerHeight / 2; 
        }
     }

 function ImagesTouchingL (thing1, thing2) {
          //
          // This function detects whether two MySprites are touching - very useful function
          //       
          if (thing2.x <= (thing1.x + paddleWidth) && thing2.y <= (thing1.y + paddleHeight) && (thing2.y + ballHeight) > thing1.y && (thing2.x + ballWidth) > thing1.x) return true;
          return false;                                                                                                
          }

 function ImagesTouchingR (thing1, thing2) {
          //
          // This function detects whether two MySprites are touching - very useful function
          //       
          if (thing2.x <= (thing1.x + paddleWidth) && thing2.y <= (thing1.y + paddleHeight) && (thing2.y + ballHeight) > thing1.y && (thing2.x + ballWidth) > thing1.x) return true;
          return false;
          }

var lpaddle = new LSprite("https://raw.githubusercontent.com/119819/2021TECCARImages/main/james%20C%20paddle%201.png?raw=true");         // The paddle on the left
var rpaddle = new RSprite("https://raw.githubusercontent.com/119819/2021TECCARImages/main/james%20C%20paddle%202.png?raw=true");         // The paddle on the right
var ball= new Ball("https://raw.githubusercontent.com/119819/2021TECCARImages/main/james%20C%20ball.png?raw=true"); // THE BALL
ball.velocity_x= 8;
ball.velocity_y= 8; 

function GameOver() {
  p1Score = 0;
  p2Score = 0;
  WinnerText = "";
  ball.x = 675;
  ball.y = window.innerHeight / 2; 
}

 function ShowP1Score() {
        ctxP.fillStyle= "HotPink";
        ctxP.font = "20px Brush Script MT";
        ctxP.fillText("" + p1Score, 40, 18); 
        }

 function ShowP2Score() {
        ctxP.fillStyle= "HotPink";
        ctxP.font = "20px Brush Script MT";
        ctxP.fillText("" + p2Score, window.innerWidth - 90, 18); 
        }

 function Do_a_Frame () {
    ctxP.clearRect(0, 0, GameBack.width, GameBack.height);   // clear the background
    ShowP1Score();                                            // show the score
    ShowP2Score();                                            // show the score
    lpaddle.Do_Frame_Things();                              // bug does what bugs do 
    rpaddle.Do_Frame_Things();                              // bug does what bugs do 
    ball.Do_Frame_Things();                              // bug does what bugs do 
    if (game_over) ShowGameOver()                           // if game over 
    if (ImagesTouchingL(lpaddle, ball)) {
    ballDir = Math.floor(Math.random() * 2) + 1;
    if (ballDir == 1) {
    ball.velocity_x= -ball.velocity_x;
    ball.velocity_y= -ball.velocity_y;
    HitSE.play();
    } else { 
    ball.velocity_x= -ball.velocity_x;
    ball.velocity_y= ball.velocity_y;
    HitSE.play();
    }
    }
    if (ImagesTouchingR(rpaddle, ball)) {
    ballDir = Math.floor(Math.random() * 2) + 1;
    if (ballDir == 1) {
    ball.velocity_x= -ball.velocity_x;
    ball.velocity_y= -ball.velocity_y;
    HitSE.play();
    } else { 
    ball.velocity_x= -ball.velocity_x;
    ball.velocity_y= ball.velocity_y;
    HitSE.play();
    }
    if (p1Score == 5) {
          return;
        }
    if (p2Score == 5) {
          return;
        }
    }
 }

 function MyKeyUpHandler (MyEvent) { 
   if (MyEvent.keyCode == 38 || MyEvent.keyCode == 40) {rpaddle.velocity_y=  0};
   if (MyEvent.keyCode == 87 || MyEvent.keyCode == 83) {lpaddle.velocity_y=  0};
   MyEvent.preventDefault()
   }

 function MyKeyDownHandler (MyEvent) { 
   if (MyEvent.keyCode == 87) {lpaddle.velocity_y=  -8}; 
   if (MyEvent.keyCode == 83) {lpaddle.velocity_y=  8}; 
   if (MyEvent.keyCode == 38) {rpaddle.velocity_y=  -8};
   if (MyEvent.keyCode == 40) {rpaddle.velocity_y=  8}; 
   if (MyEvent.keyCode == 80 && gameover == 1) GameOver();                                     // S to restart 
   MyEvent.preventDefault()
   }

 setInterval(Do_a_Frame, 1000/FPS);       // set my frame renderer
 addEventListener("keydown", MyKeyDownHandler);                      // listen for keystrokes  
 addEventListener("keyup", MyKeyUpHandler);              // listen for keys released
